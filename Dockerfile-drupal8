# This Dockerfile describes how to create the Drupal 8 container to
# serve our new site where the migration script will run. This will
# automatically be spun up from the ./scripts/run.sh script.
FROM drupal:8

RUN curl -sS https://getcomposer.org/installer | php
RUN mv composer.phar /usr/local/bin/composer
RUN apt-get update && apt-get upgrade -y
RUN apt-get install -y git
RUN composer global require drush/drush:8
RUN ln -s /root/.composer/vendor/drush/drush/drush /bin/drush

RUN apt-get install -y mysql-client

RUN cd /var/www/html && drush dl migrate_tools migrate_plus -y
# Not sure why migrate_update gets downloaded inth /root/.drush by default,
# we need to specify that we want it be downloaded to the ./modules folder.
RUN cd /var/www/html && drush dl migrate_upgrade --destination=modules -y

# Can be useful for debugging the container
RUN apt-get install -y vim

ADD docker-resources/drupal8/run.sh /run.sh
ADD docker-resources/drupal8/restore-newly-installed.sh /restore-newly-installed.sh
ADD docker-resources/drupal8/settings.php-database.txt /settings.php-database.txt

RUN cp /var/www/html/sites/default/default.settings.php \
  /var/www/html/sites/default/settings.php
RUN cat /settings.php-database.txt >> /var/www/html/sites/default/settings.php

# Avoid memory limits with large database imports.
RUN echo 'memory_limit = 512M' >> /usr/local/etc/php/php.ini

EXPOSE 80
